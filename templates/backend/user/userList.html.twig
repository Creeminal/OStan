{% extends 'base_backend.html.twig' %}

{% block title %}
    Administration
{% endblock %}

{% block content %}


    <h1 class="text-center font-weight-bold">Les utilisateurs</h1>

    <div class="table-responsive">

        <table id="horizontalScroll" class="table table-striped userTable">

            <thead class="position-sticky text-uppercase">

                <tr>
                    <th scope="col">Prénom</th>
                    <th scope="col">Nom</th>
                    <th scope="col">Pseudo</th>
                    <th scope="col">Entreprise</th>
                    <th scope="col">Naissance</th>
                    <th scope="col">Email</th>
                    <th scope="col">Adresse</th>
                    <th scope="col">Téléphone</th>
                    <th scope="col">Inscrit depuis</th>
                    <th scope="col">Job(s)</th>
                    <th scope="col">Rôle</th>
                </tr>

            </thead>

            <tbody>

                {% for user in listUser %}
                    <tr>
                        <td><a href="{{ path('user_show', {'slug': user.slug }) }}">{{user.firstname}}</a></td>
                        <td>{{user.lastname}}</td>
                        <td>{{user.username}}</td>
                        <td>{{user.companyname}}</td>
                        <td>{{user.birthdate | date('d/m/Y à H:i') }}</td>
                        <td>{{user.email}}</td>
                        <td>{{user.address}}</td>
                        <td>{{user.phonenumber}}</td>
                        <td>{{user.createdAt| date('d/m/Y à H:i')}}</td>

                        <td>
                            {% for job in user.jobs %}
                                {{job.name}}
                            {% endfor %}
                        </td>
                        <td>
                            <div class="form-group">
                                {# onchange : premier paramètre 'this' renvoie l'élément html où il se trouve, donc Select dans notre cas #}
                                {# le deuxième paramètre est généré par twig c'est l'id du user #}
                                    <select class="form-control" id="select_role_{{user.id}}" onchange="handleRoleSelect(this, {{user.id}})"> {% for role in roles %}
                                        {# " ? et : " = Ternaire. Si le code du role du user est == au code du role dans notre boucle, alors affiche selected #}
                                        {# selected affichera directement le role par défaut du user #}
                                            <option value="{{role.id}}" {{user.role.code == role.code ? "selected" : ""}}> {{role.name}}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </td>
                        <td class="d-flex">
                           
                            <a href="{{ path('backend_user_update_status', {'id': user.id}) }}" class="btn btn-warning">
                                {% if user.isAccountNonLocked %}
                                    <i class="fas fa-user-lock"></i>
                                    Bloquer
                                {% else %}
                                    <i class="fas fa-lock-open"></i>
                                    Débloquer
                                {% endif %}
                            </a>
                            {{ include('backend/user/_delete.html.twig') }}
                        </td>
                    </tr>
                {% endfor %}

            </tbody>

        </table>

    </div>


    <div class="d-flex justify-content-center">
        {{ knp_pagination_render(listUser) }}
    </div>

{% endblock %}

{% block javascripts %}

    <script>
        // On récupère l'url de base du server grâce à window.location
        var baseUrl = window.location.origin;
        // Element = Element html du select que l'on a grâce au 'this' dans le onchange du select.
        // UserId = l'id de l'user envoyé en 2ème paramètre grâce à Twig
        function handleRoleSelect(element, userId) {
            // console.log(element.value); A décommenter si besoin
            // console.log(userId);
            // console.log(window.location)
            // console.log(baseUrl);
            // On utilise ajax pour faire une requête http en mode "rest" donc sans render
            $.ajax({
                method: "PATCH",
                url: baseUrl + "/backend/user/" + userId + "/role/" + element.value,
                // En cas de succès on affiche un toast confirmant le changement de rôle du user.
                success: function (result) {
                    toastr.success('Le rôle de ' + result.firstname + ' a été mis à jour');
                },
                error: function () {
                    toastr.error('Impossible de mettre à jour le rôle, veuillez réessayer.')
                }
            });
        }


        $(document).ready(function () {
            $('#horizontalScroll').dataTable({"scrollX": true});
            $('.dataTables_length').addClass('bs-select');
        });
    </script>

{% endblock %}
